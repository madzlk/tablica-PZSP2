Search.setIndex({"alltitles": {"Contents:": [[1, null]], "Databse/API": [[3, "databse-api"]], "Introduction": [[1, "introduction"]], "Testing": [[4, "testing"]], "User manual": [[0, "user-manual"]], "Welcome to Tablica-PZSP2\u2019s documentation!": [[1, "welcome-to-tablica-pzsp2-s-documentation"]], "backend-database": [[2, "backend-database"]], "src folder": [[3, "src-folder"], [4, "module-test_api_classes"]], "src.api_classes module": [[3, "module-api_classes"]], "src.api_declaration module": [[3, "src-api-declaration-module"]], "src.database_classes module": [[3, "module-database_classes"]], "src.main module": [[3, "module-main"]], "src.orchestrator module": [[3, "module-orchestrator"]], "src.setup_db module": [[3, "src-setup-db-module"]], "src.test_database_classes module": [[4, "module-test_database_classes"]]}, "docnames": ["how_to_run", "index", "modules", "src", "tests"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1}, "filenames": ["how_to_run.rst", "index.rst", "modules.rst", "src.rst", "tests.rst"], "indexentries": {"add_stop() (database_classes.databasefacade method)": [[3, "database_classes.DatabaseFacade.add_stop", false]], "add_subscriber() (api_classes.dataobserver method)": [[3, "api_classes.DataObserver.add_subscriber", false]], "api_classes": [[3, "module-api_classes", false]], "apiadapter (class in api_classes)": [[3, "api_classes.ApiAdapter", false]], "apifacade (class in api_classes)": [[3, "api_classes.ApiFacade", false]], "check_for_change() (api_classes.dataobserver method)": [[3, "api_classes.DataObserver.check_for_change", false]], "couldnotconnect": [[3, "api_classes.CouldNotConnect", false]], "data_collection_cycle() (orchestrator.orchestrator method)": [[3, "orchestrator.Orchestrator.data_collection_cycle", false]], "database_classes": [[3, "module-database_classes", false]], "databaseadapter (class in database_classes)": [[3, "database_classes.DatabaseAdapter", false]], "databaseerror": [[3, "database_classes.DatabaseError", false]], "databasefacade (class in database_classes)": [[3, "database_classes.DatabaseFacade", false]], "dataobserver (class in api_classes)": [[3, "api_classes.DataObserver", false]], "execute_and_commit() (database_classes.databasefacade method)": [[3, "database_classes.DatabaseFacade.execute_and_commit", false]], "fetchall_query() (database_classes.databasefacade method)": [[3, "database_classes.DatabaseFacade.fetchall_query", false]], "fix_time() (api_classes.apiadapter method)": [[3, "api_classes.ApiAdapter.fix_time", false]], "get_active_stops() (database_classes.databasefacade method)": [[3, "database_classes.DatabaseFacade.get_active_stops", false]], "get_active_stops_ids() (database_classes.databasefacade method)": [[3, "database_classes.DatabaseFacade.get_active_stops_ids", false]], "get_all_stops() (api_classes.apifacade method)": [[3, "api_classes.ApiFacade.get_all_stops", false]], "get_key() (in module orchestrator)": [[3, "orchestrator.get_key", false]], "get_line_timetable() (api_classes.apifacade method)": [[3, "api_classes.ApiFacade.get_line_timetable", false]], "get_lines_for_stop() (api_classes.apifacade method)": [[3, "api_classes.ApiFacade.get_lines_for_stop", false]], "get_lines_for_stops() (api_classes.apifacade method)": [[3, "api_classes.ApiFacade.get_lines_for_stops", false]], "get_n_next_times() (database_classes.databasefacade method)": [[3, "database_classes.DatabaseFacade.get_n_next_times", false]], "get_stops() (database_classes.databasefacade method)": [[3, "database_classes.DatabaseFacade.get_stops", false]], "get_stops_hash() (database_classes.databasefacade method)": [[3, "database_classes.DatabaseFacade.get_stops_hash", false]], "get_timetables() (database_classes.databasefacade method)": [[3, "database_classes.DatabaseFacade.get_timetables", false]], "get_timetables_for_stops() (api_classes.apifacade method)": [[3, "api_classes.ApiFacade.get_timetables_for_stops", false]], "get_timetables_hash() (database_classes.databasefacade method)": [[3, "database_classes.DatabaseFacade.get_timetables_hash", false]], "incorrectapicall": [[3, "api_classes.IncorrectApiCall", false]], "log() (main.logger method)": [[3, "main.Logger.log", false]], "logger (class in main)": [[3, "main.Logger", false]], "main": [[3, "module-main", false]], "main() (in module main)": [[3, "main.main", false]], "module": [[3, "module-api_classes", false], [3, "module-database_classes", false], [3, "module-main", false], [3, "module-orchestrator", false], [4, "module-test_api_classes", false], [4, "module-test_database_classes", false]], "orchestrator": [[3, "module-orchestrator", false]], "orchestrator (class in orchestrator)": [[3, "orchestrator.Orchestrator", false]], "parse_api_lines() (api_classes.apiadapter method)": [[3, "api_classes.ApiAdapter.parse_api_lines", false]], "parse_api_stops() (api_classes.apiadapter method)": [[3, "api_classes.ApiAdapter.parse_api_stops", false]], "parse_api_timetables() (api_classes.apiadapter method)": [[3, "api_classes.ApiAdapter.parse_api_timetables", false]], "parse_database_stop_ids() (database_classes.databaseadapter method)": [[3, "database_classes.DatabaseAdapter.parse_database_stop_ids", false]], "parse_times() (database_classes.databaseadapter method)": [[3, "database_classes.DatabaseAdapter.parse_times", false]], "prepare_hash() (api_classes.dataobserver method)": [[3, "api_classes.DataObserver.prepare_hash", false]], "remove_stop() (database_classes.databasefacade method)": [[3, "database_classes.DatabaseFacade.remove_stop", false]], "set_active_inactive() (database_classes.databasefacade method)": [[3, "database_classes.DatabaseFacade.set_active_inactive", false]], "test_another_change() (test_api_classes.testdataobserver method)": [[4, "test_api_classes.TestDataObserver.test_another_change", false]], "test_api_classes": [[4, "module-test_api_classes", false]], "test_database_classes": [[4, "module-test_database_classes", false]], "test_fix_time_no_changes_needed() (test_api_classes.testapiadapter method)": [[4, "test_api_classes.TestApiAdapter.test_fix_time_no_changes_needed", false]], "test_fix_time_no_leading_zero() (test_api_classes.testapiadapter method)": [[4, "test_api_classes.TestApiAdapter.test_fix_time_no_leading_zero", false]], "test_fix_time_past_midnight() (test_api_classes.testapiadapter method)": [[4, "test_api_classes.TestApiAdapter.test_fix_time_past_midnight", false]], "test_hashing_diff_data() (test_api_classes.testdataobserver method)": [[4, "test_api_classes.TestDataObserver.test_hashing_diff_data", false]], "test_hashing_same_data() (test_api_classes.testdataobserver method)": [[4, "test_api_classes.TestDataObserver.test_hashing_same_data", false]], "test_initial_data_in() (test_api_classes.testdataobserver method)": [[4, "test_api_classes.TestDataObserver.test_initial_data_in", false]], "test_no_change() (test_api_classes.testdataobserver method)": [[4, "test_api_classes.TestDataObserver.test_no_change", false]], "test_parse_api_lines() (test_api_classes.testapiadapter method)": [[4, "test_api_classes.TestApiAdapter.test_parse_api_lines", false]], "test_parse_api_stops() (test_api_classes.testapiadapter method)": [[4, "test_api_classes.TestApiAdapter.test_parse_api_stops", false]], "test_parse_api_timetables() (test_api_classes.testapiadapter method)": [[4, "test_api_classes.TestApiAdapter.test_parse_api_timetables", false]], "test_parse_database_stop_ids() (test_database_classes.testdatabaseadapter method)": [[4, "test_database_classes.TestDatabaseAdapter.test_parse_database_stop_ids", false]], "test_parse_times() (test_database_classes.testdatabaseadapter method)": [[4, "test_database_classes.TestDatabaseAdapter.test_parse_times", false]], "test_turn_timetables_into_query() (test_database_classes.testdatabaseadapter method)": [[4, "test_database_classes.TestDatabaseAdapter.test_turn_timetables_into_query", false]], "testapiadapter (class in test_api_classes)": [[4, "test_api_classes.TestApiAdapter", false]], "testdatabaseadapter (class in test_database_classes)": [[4, "test_database_classes.TestDatabaseAdapter", false]], "testdataobserver (class in test_api_classes)": [[4, "test_api_classes.TestDataObserver", false]], "turn_timetables_into_query() (database_classes.databaseadapter method)": [[3, "database_classes.DatabaseAdapter.turn_timetables_into_query", false]], "update() (api_classes.dataobserver method)": [[3, "api_classes.DataObserver.update", false]], "update_data() (database_classes.databasefacade method)": [[3, "database_classes.DatabaseFacade.update_data", false]], "update_time() (database_classes.databasefacade method)": [[3, "database_classes.DatabaseFacade.update_time", false]], "v() (api_classes.apiadapter method)": [[3, "api_classes.ApiAdapter.v", false]]}, "objects": {"": [[3, 0, 0, "-", "api_classes"], [3, 0, 0, "-", "database_classes"], [3, 0, 0, "-", "main"], [3, 0, 0, "-", "orchestrator"], [4, 0, 0, "-", "test_api_classes"], [4, 0, 0, "-", "test_database_classes"]], "api_classes": [[3, 1, 1, "", "ApiAdapter"], [3, 1, 1, "", "ApiFacade"], [3, 3, 1, "", "CouldNotConnect"], [3, 1, 1, "", "DataObserver"], [3, 3, 1, "", "IncorrectApiCall"]], "api_classes.ApiAdapter": [[3, 2, 1, "", "fix_time"], [3, 2, 1, "", "parse_api_lines"], [3, 2, 1, "", "parse_api_stops"], [3, 2, 1, "", "parse_api_timetables"], [3, 2, 1, "", "v"]], "api_classes.ApiFacade": [[3, 2, 1, "", "get_all_stops"], [3, 2, 1, "", "get_line_timetable"], [3, 2, 1, "", "get_lines_for_stop"], [3, 2, 1, "", "get_lines_for_stops"], [3, 2, 1, "", "get_timetables_for_stops"]], "api_classes.DataObserver": [[3, 2, 1, "", "add_subscriber"], [3, 2, 1, "", "check_for_change"], [3, 2, 1, "", "prepare_hash"], [3, 2, 1, "", "update"]], "database_classes": [[3, 1, 1, "", "DatabaseAdapter"], [3, 3, 1, "", "DatabaseError"], [3, 1, 1, "", "DatabaseFacade"]], "database_classes.DatabaseAdapter": [[3, 2, 1, "", "parse_database_stop_ids"], [3, 2, 1, "", "parse_times"], [3, 2, 1, "", "turn_timetables_into_query"]], "database_classes.DatabaseFacade": [[3, 2, 1, "", "add_stop"], [3, 2, 1, "", "execute_and_commit"], [3, 2, 1, "", "fetchall_query"], [3, 2, 1, "", "get_active_stops"], [3, 2, 1, "", "get_active_stops_ids"], [3, 2, 1, "", "get_n_next_times"], [3, 2, 1, "", "get_stops"], [3, 2, 1, "", "get_stops_hash"], [3, 2, 1, "", "get_timetables"], [3, 2, 1, "", "get_timetables_hash"], [3, 2, 1, "", "remove_stop"], [3, 2, 1, "", "set_active_inactive"], [3, 2, 1, "", "update_data"], [3, 2, 1, "", "update_time"]], "main": [[3, 1, 1, "", "Logger"], [3, 4, 1, "", "main"]], "main.Logger": [[3, 2, 1, "", "log"]], "orchestrator": [[3, 1, 1, "", "Orchestrator"], [3, 4, 1, "", "get_key"]], "orchestrator.Orchestrator": [[3, 2, 1, "", "data_collection_cycle"]], "test_api_classes": [[4, 1, 1, "", "TestApiAdapter"], [4, 1, 1, "", "TestDataObserver"]], "test_api_classes.TestApiAdapter": [[4, 2, 1, "", "test_fix_time_no_changes_needed"], [4, 2, 1, "", "test_fix_time_no_leading_zero"], [4, 2, 1, "", "test_fix_time_past_midnight"], [4, 2, 1, "", "test_parse_api_lines"], [4, 2, 1, "", "test_parse_api_stops"], [4, 2, 1, "", "test_parse_api_timetables"]], "test_api_classes.TestDataObserver": [[4, 2, 1, "", "test_another_change"], [4, 2, 1, "", "test_hashing_diff_data"], [4, 2, 1, "", "test_hashing_same_data"], [4, 2, 1, "", "test_initial_data_in"], [4, 2, 1, "", "test_no_change"]], "test_database_classes": [[4, 1, 1, "", "TestDatabaseAdapter"]], "test_database_classes.TestDatabaseAdapter": [[4, 2, 1, "", "test_parse_database_stop_ids"], [4, 2, 1, "", "test_parse_times"], [4, 2, 1, "", "test_turn_timetables_into_query"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "exception", "Python exception"], "4": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:exception", "4": "py:function"}, "terms": {"add_stop": [2, 3], "add_subscrib": [2, 3], "api": [1, 2], "api_adapt": 3, "api_class": 2, "api_declar": 2, "api_kei": 3, "api_lines_respons": 3, "api_stops_respons": 3, "api_timetables_respons": 3, "apiadapt": [2, 3], "apifacad": [2, 3], "backend": 1, "base": [3, 4], "check_for_chang": [2, 3], "class": [3, 4], "couldnotconnect": [2, 3], "data": 3, "data_collection_cycl": [2, 3], "databas": 1, "database_adapt": 3, "database_class": 2, "database_fil": 3, "databaseadapt": [2, 3], "databaseerror": [2, 3], "databasefacad": [2, 3], "databs": [1, 2], "dataobserv": [2, 3], "except": 3, "execute_and_commit": [2, 3], "fetchall_queri": [2, 3], "fix_tim": [2, 3], "folder": 2, "get_active_stop": [2, 3], "get_active_stops_id": [2, 3], "get_all_stop": [2, 3], "get_kei": [2, 3], "get_line_timet": [2, 3], "get_lines_for_stop": [2, 3], "get_n_next_tim": [2, 3], "get_stop": [2, 3], "get_stops_hash": [2, 3], "get_timet": [2, 3], "get_timetables_for_stop": [2, 3], "get_timetables_hash": [2, 3], "incorrectapical": [2, 3], "line": 3, "log": [2, 3], "logger": [2, 3], "main": 2, "manual": 1, "messag": 3, "modul": 2, "n": 3, "new_statu": 3, "new_timet": 3, "object": [3, 4], "orchestr": 2, "parse_api_lin": [2, 3], "parse_api_stop": [2, 3], "parse_api_timet": [2, 3], "parse_database_stop_id": [2, 3], "parse_tim": [2, 3], "prepare_hash": [2, 3], "queri": 3, "remove_stop": [2, 3], "set_active_inact": [2, 3], "setup_db": 2, "sourc": [3, 4], "src": 2, "stop": 3, "stop_id": 3, "sub": 3, "test": [1, 2], "test_another_chang": [2, 4], "test_api_class": 4, "test_database_class": 2, "test_fix_time_no_changes_need": [2, 4], "test_fix_time_no_leading_zero": [2, 4], "test_fix_time_past_midnight": [2, 4], "test_hashing_diff_data": [2, 4], "test_hashing_same_data": [2, 4], "test_initial_data_in": [2, 4], "test_no_chang": [2, 4], "test_parse_api_lin": [2, 4], "test_parse_api_stop": [2, 4], "test_parse_api_timet": [2, 4], "test_parse_database_stop_id": [2, 4], "test_parse_tim": [2, 4], "test_turn_timetables_into_queri": [2, 4], "testapiadapt": [2, 4], "testdatabaseadapt": [2, 4], "testdataobserv": [2, 4], "thing": 3, "time": 3, "timet": 3, "turn_timetables_into_queri": [2, 3], "updat": [2, 3], "update_data": [2, 3], "update_tim": [2, 3], "user": 1, "v": [2, 3], "valu": 3}, "titles": ["User manual", "Welcome to Tablica-PZSP2\u2019s documentation!", "backend-database", "Databse/API", "Testing"], "titleterms": {"": 1, "api": 3, "api_class": 3, "api_declar": 3, "backend": 2, "content": 1, "databas": 2, "database_class": 3, "databs": 3, "document": 1, "folder": [3, 4], "introduct": 1, "main": 3, "manual": 0, "modul": [3, 4], "orchestr": 3, "pzsp2": 1, "setup_db": 3, "src": [3, 4], "tablica": 1, "test": 4, "test_database_class": 4, "user": 0, "welcom": 1}})